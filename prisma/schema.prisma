// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  phone     String?
  name      String
  address   String?
  status    Int       @default(1)
  posts     Post[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Post {
  id          Int       @id  @default(autoincrement())
  title       String
  summary     String
  content     String
  status      Int       @default(1)
  author      User      @relation(fields: [authorId], references: [id])
  authorId    Int  
  category    Category      @relation(fields: [categoryId], references: [id])
  categoryId  Int  
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  posts       Post[]
}

model Comment {
  id      Int   @id   @default(autoincrement())
  message String
}
model Role {
  id            Int          @id @default(autoincrement())
  name          String       @unique
  description   String
  isActive      Boolean      @default(true)
  permissions   Permission[] @relation("RolePermissions")
  permissionIds Int[]
  deletedById   Int?         
  createdAt     DateTime     @default(now())
  updatedAt     DateTime?
  deletedAt     DateTime?
  isDeleted     Boolean?     @default(false)
}

model Permission {
  id    Int     @id @default(autoincrement())
  name  String 

  apiPath String

  method String

  module String
  roles Role[]  @relation("RolePermissions")
}